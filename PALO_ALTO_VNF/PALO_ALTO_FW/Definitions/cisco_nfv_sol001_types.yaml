tosca_definitions_version: tosca_simple_yaml_1_2

data_types:
  cisco.datatypes.nfv.VendorExtension:
    derived_from: tosca.datatypes.Root
    description: Vendor extensions applicable to any data type.
    properties:
      cisco_esc:
        description: Reference to the VNFM that will process this extension.
        type: map
        required: true

  cisco.datatypes.nfv.VnfHealOperationConfiguration:
    derived_from: tosca.datatypes.nfv.VnfHealOperationConfiguration
    properties:
      recovery_action:
        type: string
        required: true
      recovery_wait_time:
        type: integer
        required: true
      monitor_on_error:
        type: boolean
        required: false

  cisco.datatypes.nfv.VnfAdditionalConfigurableProperties:
    derived_from: tosca.datatypes.nfv.VnfAdditionalConfigurableProperties
    description: It provides VNF specific configurable properties that can be modified using the ModifyVnfInfo operation
    properties:
      services:
        type: list
        description: List of container specifications
        entry_schema:
          type: cisco.datatypes.nfv.Service
  
  cisco.datatypes.nfv.VnfcAdditionalConfigurableProperties:
    derived_from: tosca.datatypes.nfv.VnfcAdditionalConfigurableProperties
    properties:
      vim_flavor:
        type: string
        required: false
      bootup_time:
        type: integer
        required: false
      vm_name_override:
        type: string
        required: false
      recovery_action:
        type: string
        required: false
        constraints:
          - valid_values: [ REBOOT_THEN_REDEPLOY, REDEPLOY_ONLY, REBOOT_ONLY ]
      is_vnfc_autoheal_enabled:
        type: boolean
        description: It permits to enable (TRUE)/disable (FALSE) the auto-healing functionality. If the properties is not present for configuring, then VNF-level property is used instead
        required: false

  cisco.datatypes.nfv.VnfLcmOperationsConfiguration:
    derived_from: tosca.datatypes.nfv.VnfLcmOperationsConfiguration
    properties:
      heal:
        type: cisco.datatypes.nfv.VnfHealOperationConfiguration

  cisco.datatypes.nfv.VnfConfigurableProperties:
    derived_from: tosca.datatypes.nfv.VnfConfigurableProperties
    properties:
      additional_vnf_configurable_properties:
        type: cisco.datatypes.nfv.VnfAdditionalConfigurableProperties
        required: false
  
  cisco.datatypes.nfv.VnfcConfigurableProperties:
    derived_from: tosca.datatypes.nfv.VnfcConfigurableProperties
    properties:
      additional_vnfc_configurable_properties:
        type: cisco.datatypes.nfv.VnfcAdditionalConfigurableProperties
        required: false

  cisco.datatypes.nfv.VnfOperationAdditionalParameters:
    derived_from: tosca.datatypes.nfv.VnfOperationAdditionalParameters
    properties:
      parameters:
        type: map
        description: An array of key-value pairs
        required: false
        entry_schema:
          type: string

  cisco.datatypes.nfv.IpAddress:
    derived_from: tosca.datatypes.Root
    properties:
      ip_address:
        type: string
        description: The stacked IP addresses for this interface
        required: false
      subnet:
        type: string
        description: The subnet reference from which  IP addresses for this interface should be assigned
        required: false
        
  cisco.datatypes.nfv.L2ProtocolData:
    derived_from: tosca.datatypes.nfv.L2ProtocolData
    properties:
      segmentation_id:
        type: integer
        required: false

  cisco.datatypes.nfv.metric.Collector.Property:
    derived_from: tosca.datatypes.Root
    properties:
      name: 
        type: string
        description: Name/Key of property
        required: true
      value:
        type: string
        description: Value of property
        required: false
      encrypted_value:
        type: string
        description: Encrypted value of property
        required: false

  cisco.datatypes.nfv.metric.Collector:
    derived_from: tosca.datatypes.Root
    properties:
      type:
        type: string
        description: Type that monitor module should monitor, for example, ICMP_Ping
        required: true
      nicid:
        type: integer
        description: Interface that should be used to monitor the metric
        required: true
      address_id:
        type: integer
        description: Interface that should be used to monitor the metric
        required: false
      proxy:
        type: string
        description: IP address/host name of the proxy
        required: false
      poll_frequency:
        type: integer
        description: Frequency at which the metric should be polled
        required: true
      polling_unit:
        type: string
        description: Units of poll frequency (seconds or minutes)
        required: true
      continuous_alarm:
        type: boolean
        description: Whether continuous events need to be generated
        required: true
      monitoring_public_ip:
        type: boolean
        description: Whether to ping the public IP address of the nic instead of the private one
        required: false
      property_list:
        type: list
        required: false
        entry_schema:
          type: cisco.datatypes.nfv.metric.Collector.Property
          description: Key-value pairs to provide metadata to the southbound components

  cisco.datatypes.nfv.data.Kpi:
    derived_from: tosca.datatypes.Root
    description: Definition of proprietary KPIs
    properties:
      event_name:
        type: string
        description: The user-defined name of the KPI event
        required: true
      metric_value:
        type: string
        description: The threshold value to be evaluated
        required: true
      metric_cond:
        type: string
        description: The conditional operator to use to evaluate the threshold value
        required: true
        constraints:
          - valid_values: [ 'GT', 'LT', 'EQ', 'GE', 'LE' ]
      metric_type:
        type: string
        description:
        required: true
        constraints:
          - valid_values: [ 'INT8', 'UINT8','INT16', 'UINT16', 'INT32', 'UINT32', 'FLOAT', 'DOUBLE' ]
      metric_occurrences_true:
        type: integer
        description: Successive polling cycles monitoring before evaluating to the event to true
        required: false
      metric_occurrences_false:
        type: integer
        description: Successive polling cycles monitoring before evaluating to the event to false
        required: false
      metric_proxy:
        type: string
        description: The IP address/host name of a proxy node from which to retrieve status information
        required: false
      metric_collector:
        type: cisco.datatypes.nfv.metric.Collector
        description: The metrics that needs to be monitored and at which frequency
        required: true

  cisco.datatypes.nfv.data.Kpi_rules:
    derived_from: tosca.datatypes.Root
    description: Definition of proprietary rules to be executed in reaction to a KPI metric measurement
    properties:
      event_name:
        type: string
        description: The user-defined name of the KPI event, will have been defined in the KPI data
        required: true
      action:
        type: list
        entry_schema:
          type: string
          description: Action associated with the event

  cisco.datatypes.nfv.data.Admin_rules:
    derived_from: cisco.datatypes.nfv.data.Kpi_rules
    description: Definition of proprietary rules to be executed in reaction to a KPI metric measurement
 
  cisco.datatypes.nfv.IpAddressRange:
    derived_from: tosca.datatypes.Root
    properties:
      start:
        type: string
        description: Starting IP address in the range
        required: true
      end:
        type: string
        description: Ending IP address in the range
        required: true    

  cisco.datatypes.nfv.IpAddressPool:
    derived_from: tosca.datatypes.Root
    properties:
      network:
        type: string
        description: This can be a name or UUID of the network to which the IP addresses specified below belong
        required: true
      gateway:
        type: string
        description: Default gateway of the network
        required: false
      netmask:
        type: string
        description: Netmask for the network
        required: false
      ip_prefix:
        type: string
        description: Subnet mask represented by IP prefix. For IPv4 subnet, it is 0 - 32. For IPv6 subnet, it is 0 - 128
        required: false
      ip_address_range:
        type: list
        required: false
        entry_schema:
          type: cisco.datatypes.nfv.IpAddressRange
          description: Contigeous block of IP address can be specified using range
      ip_addresses:
        type: list
        required: false
        entry_schema:
          type: cisco.datatypes.nfv.IpAddress
          description: Non-contigeous individual random IP addresses
          
  cisco.datatypes.nfv.VduProfile:
    derived_from: tosca.datatypes.nfv.VduProfile
    properties:
      static_ip_address_pools:
        type: list
        required: false
        entry_schema:
          type: cisco.datatypes.nfv.IpAddressPool
          description: Static IP addresses are required for the VMs that are instantiated during scale-out
          
  cisco.datatypes.nfv.Placement:
    derived_from: tosca.datatypes.Root
    properties:
      placement_type:
        type: string
        description: Placement policy within a VM group
        constraints:
          - valid_values: [ affinity, anti_affinity, zone, host ]
      placement_target:
        type: string
        description: A directive to identify the target when zone or host is selected
        required: false
      placement_enforcement:
        type: string
        description: Strict or Loose enforcement (currently only strict is supported)
        constraints:
          - valid_values: [ strict, loose ]
          
  cisco.datatypes.nfv.Service:
    derived_from: tosca.datatypes.Root
    properties:
      name:
        type: string
        required: true
        description: Service name
      type:
        type: string
        required: false
        constraints:
          - valid_values: [ LoadBalancer, ClusterIP, NodePort ]
      ports:
        type: list
        entry_schema:
          type: cisco.datatypes.nfv.Service.Port
          description: List of virtual ports
      selector:
        type: cisco.datatypes.nfv.Service.Selector
        
  cisco.datatypes.nfv.Service.Port:
    derived_from: tosca.datatypes.Root
    properties:
      internal_port:
        type: integer
        description: The internal port for service
      external_port:
        type: integer
        description: The external port for service
        required: false
      protocol:
        type: string
        description: The protocol for container
        required: false
        
  cisco.datatypes.nfv.Service.Selector:
    derived_from: tosca.datatypes.Root
    properties:
      cdir:
        type: string
        description: Classless Inter Domain Routing address
        required: false
      vdu_id:
        type: string
        description: id of cisco.nodes.nfv.Vdu.Compute node
        required: false
      cp:
        type: integer
        description: The number of the NIC on the compute instance (e.g.eth2).
        required: false
        constraints:
          - greater_or_equal: 0
          
      
interface_types:
  cisco.interfaces.nfv.Vnflcm:
    derived_from: tosca.interfaces.nfv.Vnflcm
    instantiate:
      inputs:
        script_parameters:
          type: map
          description: Parameters for LCM policy scripts
          required: false
          entry_schema:
            type: string
        additional_parameters:
          type: cisco.datatypes.nfv.VnfOperationAdditionalParameters
    instantiate_start:
      inputs:
        script_parameters:
          type: map
          description: Parameters for LCM policy scripts
          required: false
          entry_schema:
            type: string
    instantiate_end:
      inputs:
        script_parameters:
          type: map
          description: Parameters for LCM policy scripts
          required: false
          entry_schema:
            type: string
    terminate:
      inputs:
        script_parameters:
          type: map
          description: Parameters for LCM policy scripts
          required: false
          entry_schema:
            type: string
        additional_parameters:
          type: cisco.datatypes.nfv.VnfOperationAdditionalParameters
    terminate_start:
      inputs:
        script_parameters:
          type: map
          description: Parameters for LCM policy scripts
          required: false
          entry_schema:
            type: string
    terminate_end:
      inputs:
        script_parameters:
          type: map
          description: Parameters for LCM policy scripts
          required: false
          entry_schema:
            type: string

node_types:
  cisco.nodes.nfv.Vdu.Compute:
    derived_from: tosca.nodes.nfv.Vdu.Compute
    properties:
      configurable_properties:
        type: cisco.datatypes.nfv.VnfcConfigurableProperties
        description: Describes the configurable properties of all VNFC instances based on this VDU
        required: false
      vdu_profile:
        type: cisco.datatypes.nfv.VduProfile
        description: Describes the scaling properties of this VDU
        required: true    
      kpi_data:
        type: map # key: event_name
        description: The different KPIs applicable to this VDU
        required: false
        entry_schema:
          type: cisco.datatypes.nfv.data.Kpi
          description: A single KPI
      admin_rules:
        type: map # key: event_name
        description: Actions for events
        required: false
        entry_schema:
          type: cisco.datatypes.nfv.data.Admin_rules
          description: Define actions for events
      placements:
        type: list
        description: List of placements for vdu
        required: false
        entry_schema:
          type: cisco.datatypes.nfv.Placement
          description: Placement definition
      vendor_section:
        type: cisco.datatypes.nfv.VendorExtension
        required: false

  cisco.nodes.nfv.Vdu.VirtualBlockStorage:
    derived_from: tosca.nodes.nfv.Vdu.VirtualBlockStorage
    properties:
      resource_id:
        type: string
        description: An optional VIM UUID to override the creation of a volume with the use of a persistent volume
        required: false
      vendor_section:
        type: cisco.datatypes.nfv.VendorExtension
        required: false

  cisco.nodes.nfv.VduCp:
    derived_from: tosca.nodes.nfv.VduCp
    properties:
      management:
        type: boolean
        description: Whether this interface is a management port
        required: false
      ip_subnet:
        type: list
        required: false
        entry_schema:
          type: cisco.datatypes.nfv.IpAddress
          description: The stacked IP addresses for this interface
      allowed_address_pairs:
        type: list
        required: false
        entry_schema:
          type: cisco.datatypes.nfv.IpAddress
          description: MAC/ IP address (cidr) pairs that are allowed to pass through a port regardless of subnet
      name_override:
        type: string
        description: An optional custom name that be be configured on the VIM
        required: false
      binding_profile:
        type: map
        description: Key value pairs for supporting binding profile configuration (supporting type, trusted, if_name)
        required: false
      nw_card_model:
        type: string
        description: Describes the type of the virtual network card
        required: false
        constraints:
          - valid_values: [ virtio, e1000, ne2k_pci, i82551, i82557b, i82559er, rtl8139, pcnet ]
      iface_type:
        type: string
        description: An optional type for vCloudDirector
        required: false
        constraints:
          - valid_values: [ virtual, passthru, direct, macvtap ]
      port_security_enabled:
        type: boolean
        description: Determines whether security is enabled at port level
        required: false

policy_types:
  cisco.policies.nfv.SecurityGroupRule:
    derived_from: tosca.policies.nfv.SecurityGroupRule
    description: The SecurityGroupRule type is a policy type; only OOB SGRs are currently supported
    properties:
      group_name:
        type: string
        description: The IdentifierInVim of the OOB security group rule.
        required: false
